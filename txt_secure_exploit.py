import base64

print "Calculating the key from plain text 1 and enc text 1"
msg1_plain="This message is not important, so I send it twice encrypted and plain."
msg1_enc="XOvjumbdDj+Ny3Dz/dicO2bs/ukv3RsjjN52+Kmdz2hno8PpNdUFKN7DY7apxoZ4baPvpyXCEjyKz3O2vN+LO3jv66Aong=="
msg1_dec = base64.b64decode(msg1_enc)

key = ''.join([chr(ord(a) ^ ord(b)) for a,b in zip(msg1_dec, msg1_plain)])
print 'key: ' + " ".join("{0:x}".format(ord(c)) for c in key)

print "Decrypting the plain text from msg2_enc"
msg2_enc = "Ruz96TLYDmyXx2f5r8WOdXyj56w1wworm4pg/6nZz29g5qqvKtEMdt6Icfq81pR4ae3VsCnFNC6bxn7zq9SwY2fx1bk03x0lms9kya3UnX1t4P6WNdUIOYzDY+/izM01"
msg2_dec = base64.b64decode(msg2_enc)
print msg2_dec

# Found that key is repeating just took a snapshot of a key and repeated in-order to get the whole key
key = "8 83 8a c9 46 b0 6b 4c fe aa 17 96 dd b1 ef 1b".split(' ')
key = map(lambda x: chr(int(x,16)), key)
key = key * (len(msg2_dec) / len(key))
key = key + key[0:len(msg2_dec)%len(key)]

f_msg2 = open('msg2.txt', 'w')
f_msg2.write(msg2_dec)

msg2_plain = ''.join([chr(ord(a) ^ ord(b)) for a,b in zip(msg2_dec, key)])
print "message 2: " + msg2_plain
